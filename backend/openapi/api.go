// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Proof Pass API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package openapi

import (
	"context"
	"net/http"
)



// DefaultAPIRouter defines the required methods for binding the api requests to a responses for the DefaultAPI
// The DefaultAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DefaultAPIServicer to perform the required actions, then write the service results to the http response.
type DefaultAPIRouter interface { 
	EventsEventIdAttendancePost(http.ResponseWriter, *http.Request)
	EventsEventIdGet(http.ResponseWriter, *http.Request)
	EventsEventIdPut(http.ResponseWriter, *http.Request)
	EventsEventIdRequestTicketCredentialPost(http.ResponseWriter, *http.Request)
	EventsGet(http.ResponseWriter, *http.Request)
	EventsPost(http.ResponseWriter, *http.Request)
	HealthGet(http.ResponseWriter, *http.Request)
	UserLoginPost(http.ResponseWriter, *http.Request)
	UserMeEmailCredentialGet(http.ResponseWriter, *http.Request)
	UserMeEmailCredentialPut(http.ResponseWriter, *http.Request)
	UserMeGet(http.ResponseWriter, *http.Request)
	UserMeRequestEmailCredentialPost(http.ResponseWriter, *http.Request)
	UserMeTicketCredentialPut(http.ResponseWriter, *http.Request)
	UserMeTicketCredentialsGet(http.ResponseWriter, *http.Request)
	UserRequestVerificationCodePost(http.ResponseWriter, *http.Request)
	UserUpdatePut(http.ResponseWriter, *http.Request)
}


// DefaultAPIServicer defines the api actions for the DefaultAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DefaultAPIServicer interface { 
	EventsEventIdAttendancePost(context.Context, string, RecordAttendanceRequest) (ImplResponse, error)
	EventsEventIdGet(context.Context, string) (ImplResponse, error)
	EventsEventIdPut(context.Context, string, UpdateEventRequest) (ImplResponse, error)
	EventsEventIdRequestTicketCredentialPost(context.Context, string) (ImplResponse, error)
	EventsGet(context.Context) (ImplResponse, error)
	EventsPost(context.Context, CreateEventRequest) (ImplResponse, error)
	HealthGet(context.Context) (ImplResponse, error)
	UserLoginPost(context.Context, UserLogin) (ImplResponse, error)
	UserMeEmailCredentialGet(context.Context) (ImplResponse, error)
	UserMeEmailCredentialPut(context.Context, PutEmailCredentialRequest) (ImplResponse, error)
	UserMeGet(context.Context) (ImplResponse, error)
	UserMeRequestEmailCredentialPost(context.Context) (ImplResponse, error)
	UserMeTicketCredentialPut(context.Context, PutTicketCredentialRequest) (ImplResponse, error)
	UserMeTicketCredentialsGet(context.Context) (ImplResponse, error)
	UserRequestVerificationCodePost(context.Context, UserEmailVerificationRequest) (ImplResponse, error)
	UserUpdatePut(context.Context, UserUpdate) (ImplResponse, error)
}
